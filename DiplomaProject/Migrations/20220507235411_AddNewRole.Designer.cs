// <auto-generated />
using System;
using DiplomaProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiplomaProject.Migrations
{
    [DbContext(typeof(KraftWebAppContext))]
    [Migration("20220507235411_AddNewRole")]
    partial class AddNewRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DiplomaProject.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOpenForAddingProducts")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ShopProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DiplomaProject.Models.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DeliveryTypes");
                });

            modelBuilder.Entity("DiplomaProject.Models.LikedProductsByUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("LikedProductsByUsers");
                });

            modelBuilder.Entity("DiplomaProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressToDelivery")
                        .HasColumnType("longtext");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateBeReady")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfFixation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DeliveryTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("ReadyStageId")
                        .HasColumnType("int");

                    b.Property<int>("ShopProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("ReadyStageId");

                    b.HasIndex("ShopProfileId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiplomaProject.Models.OrderFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Estimation")
                        .HasColumnType("int");

                    b.Property<bool>("IsInTime")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderFeedbacks");
                });

            modelBuilder.Entity("DiplomaProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Composition")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("ShopProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopProfileId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiplomaProject.Models.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Estimation")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductComments");
                });

            modelBuilder.Entity("DiplomaProject.Models.ProductInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Amount")
                        .HasColumnType("longtext");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("FinalDescription")
                        .HasColumnType("longtext");

                    b.Property<double>("FinalPrice")
                        .HasColumnType("double");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrder");
                });

            modelBuilder.Entity("DiplomaProject.Models.ReadyStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ReadyStages");
                });

            modelBuilder.Entity("DiplomaProject.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        },
                        new
                        {
                            Id = 3,
                            Name = "salesman"
                        });
                });

            modelBuilder.Entity("DiplomaProject.Models.ShopComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Estimation")
                        .HasColumnType("int");

                    b.Property<int>("ShopProfileId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("ShopComments");
                });

            modelBuilder.Entity("DiplomaProject.Models.ShopProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Contacts")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<string>("LogoPhoto")
                        .HasColumnType("longtext");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("SalesmanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesmanId");

                    b.ToTable("ShopProfiles");
                });

            modelBuilder.Entity("DiplomaProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ru",
                            Latitude = 0,
                            Longitude = 0,
                            Password = "123456",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("DiplomaProject.Models.Cart", b =>
                {
                    b.HasOne("DiplomaProject.Models.User", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DiplomaProject.Models.LikedProductsByUsers", b =>
                {
                    b.HasOne("DiplomaProject.Models.Product", "Product")
                        .WithMany("UsersLikes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.User", "User")
                        .WithMany("LikedProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomaProject.Models.Order", b =>
                {
                    b.HasOne("DiplomaProject.Models.Cart", "Cart")
                        .WithOne("Order")
                        .HasForeignKey("DiplomaProject.Models.Order", "CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.DeliveryType", "DeliveryType")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.ReadyStage", "ReadyStage")
                        .WithMany()
                        .HasForeignKey("ReadyStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.ShopProfile", "ShopProfile")
                        .WithMany("Orders")
                        .HasForeignKey("ShopProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("DeliveryType");

                    b.Navigation("ReadyStage");

                    b.Navigation("ShopProfile");
                });

            modelBuilder.Entity("DiplomaProject.Models.OrderFeedback", b =>
                {
                    b.HasOne("DiplomaProject.Models.User", "Customer")
                        .WithMany("OrderFeedbacks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.Order", "Order")
                        .WithOne("OrderFeedback")
                        .HasForeignKey("DiplomaProject.Models.OrderFeedback", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiplomaProject.Models.Product", b =>
                {
                    b.HasOne("DiplomaProject.Models.ShopProfile", "ShopProfile")
                        .WithMany("Products")
                        .HasForeignKey("ShopProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopProfile");
                });

            modelBuilder.Entity("DiplomaProject.Models.ProductComment", b =>
                {
                    b.HasOne("DiplomaProject.Models.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.User", "User")
                        .WithMany("ProductComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomaProject.Models.ProductInOrder", b =>
                {
                    b.HasOne("DiplomaProject.Models.Cart", "Cart")
                        .WithMany("ProductsInOrder")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.Product", "Product")
                        .WithMany("ProductInOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiplomaProject.Models.ShopComment", b =>
                {
                    b.HasOne("DiplomaProject.Models.ShopProfile", "ShopProfile")
                        .WithMany("ShopComments")
                        .HasForeignKey("ShopProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomaProject.Models.User", "User")
                        .WithMany("ShopComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopProfile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomaProject.Models.ShopProfile", b =>
                {
                    b.HasOne("DiplomaProject.Models.User", "Salesman")
                        .WithMany("ShopProfiles")
                        .HasForeignKey("SalesmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salesman");
                });

            modelBuilder.Entity("DiplomaProject.Models.User", b =>
                {
                    b.HasOne("DiplomaProject.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DiplomaProject.Models.Cart", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("ProductsInOrder");
                });

            modelBuilder.Entity("DiplomaProject.Models.Order", b =>
                {
                    b.Navigation("OrderFeedback");
                });

            modelBuilder.Entity("DiplomaProject.Models.Product", b =>
                {
                    b.Navigation("ProductComments");

                    b.Navigation("ProductInOrders");

                    b.Navigation("UsersLikes");
                });

            modelBuilder.Entity("DiplomaProject.Models.ShopProfile", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");

                    b.Navigation("ShopComments");
                });

            modelBuilder.Entity("DiplomaProject.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("LikedProducts");

                    b.Navigation("OrderFeedbacks");

                    b.Navigation("ProductComments");

                    b.Navigation("ShopComments");

                    b.Navigation("ShopProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
